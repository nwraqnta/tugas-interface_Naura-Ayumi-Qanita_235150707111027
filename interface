public class Main {
    public static void main(String[] args) {
        // Creating book objects
        Textbook javaProgramming = new Textbook("Java Programming", "John Smith", 2020);
        Novel mockingbird = new Novel("To Kill a Mockingbird", "Harper Lee", 1960);
        Magazine nationalGeographic = new Magazine("National Geographic", "Various", 2021);

        // Printing book information
        System.out.println("---- Book Information ----");
        System.out.println(javaProgramming);
        System.out.println(mockingbird);
        System.out.println(nationalGeographic);

        // Borrowing and Returning Books
        System.out.println("---- Borrowing and Returning Books ----");
        javaProgramming.borrow();
        nationalGeographic.borrow();
        javaProgramming.returnBook();
        mockingbird.checkBorrowed();
    }

    interface Borrowable {
        void borrow();
        void returnBook();
        void checkBorrowed();
    }

    static abstract class Book implements Borrowable {
        protected String title;
        protected String author;
        protected int year;
        protected boolean isBorrowed;

        public Book(String title, String author, int year) {
            this.title = title;
            this.author = author;
            this.year = year;
            this.isBorrowed = false;
        }

        @Override
        public String toString() {
            return String.format("Title: %s\nAuthor: %s\nYear: %d\nBorrowed: %s\n",
                    title, author, year, isBorrowed ? "true" : "false");
        }

        @Override
        public void borrow() {
            if (!isBorrowed) {
                isBorrowed = true;
                System.out.println(title + " borrowed successfully.");
            } else {
                System.out.println(title + " is already borrowed.");
            }
        }

        @Override
        public void returnBook() {
            if (isBorrowed) {
                isBorrowed = false;
                System.out.println(title + " returned successfully.");
            } else {
                System.out.println(title + " is not borrowed.");
            }
        }

        @Override
        public void checkBorrowed() {
            System.out.println(title + " is " + (isBorrowed ? "" : "not ") + "borrowed.");
        }
    }

    static class Textbook extends Book {
        public Textbook(String title, String author, int year) {
            super(title, author, year);
        }
    }

    static class Novel extends Book {
        public Novel(String title, String author, int year) {
            super(title, author, year);
        }
    }

    static class Magazine extends Book {
        public Magazine(String title, String author, int year) {
            super(title, author, year);
        }
    }
}
